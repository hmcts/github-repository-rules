name: Pull Request

on:
  pull_request:
    branches:
      - master
      - adding-ruleset-org-level

env:
  TF_LOG: INFO

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs: 
  pr-infra-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.DCD_CFT_SANDBOX_SUBSCRIPTION }}
    
    - name: Install jq
      run: sudo apt-get install jq -y
    
    - name: List Repositories and Branches
      run: |
          echo "Checking Repositories and Branches"
          cat ./production-repos.json
          for repo in $(jq -r '.[]' ./production-repos.json); do
            echo "Checking repository: $repo"
            curl -H "Authorization: token ${{ secrets.OAUTH_TOKEN }}" \
                 -H "Accept: application/vnd.github.v3+json" \
                 "https://api.github.com/repos/hmcts-test/$repo"
    
            for branch in main master; do
              echo "Checking branch: $branch in repository: $repo"
              curl -H "Authorization: token ${{ secrets.OAUTH_TOKEN }}" \
                   -H "Accept: application/vnd.github.v3+json" \
                   "https://api.github.com/repos/hmcts-test/$repo/branches/$branch" || true
            done
          done

    - name: Terraform Init
      working-directory: components
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.DCD_CFT_SANDBOX_SUBSCRIPTION }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        terraform init \
          -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT }}" \
          -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
          -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}"

    - name: Terraform format
      working-directory: components
      run: terraform fmt -check

    - name: Terraform validate
      working-directory: components
      run: terraform validate

    - name: Terraform plan
      working-directory: components
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.DCD_CFT_SANDBOX_SUBSCRIPTION }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_oauth_token: ${{ secrets.OAUTH_TOKEN }}
      run: terraform plan