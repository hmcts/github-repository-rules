name: Rule Sets Pipeline

on:
  pull_request:
    branches:
      - rule-sets-DTSPO-17918
  push:
    branches:
      - rule-sets-DTSPO-17918

permissions:
  id-token: write
  contents: read

jobs:
  plan-and-apply:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure
        run: |
          az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
          az account set --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        working-directory: components
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          terraform init \
            -backend-config="resource_group_name=rule-set-rg" \
            -backend-config="storage_account_name=rulesetsa" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"

      - name: Plan and Apply Terraform
        working-directory: components
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          terraform plan -out=tfplan -var-file="terraform.tfvars"
          terraform apply -auto-approve tfplan
